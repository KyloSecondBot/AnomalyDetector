{"ast":null,"code":"var _jsxFileName = \"/Users/timothygilbert/Documents/React JS/anomaly-detector/client/src/pages/SQLCheckPage/Sql.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Sql.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sql() {\n  _s();\n  const [query, setQuery] = useState(''); // Store the user's SQL query input\n  const [result, setResult] = useState(null); // Store the API response\n  const [loading, setLoading] = useState(false); // Manage loading state\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent page reload on form submit\n    setLoading(true); // Set loading state\n\n    const handleKeyDown = e => {\n      if (e.key === 'Enter') sendMessage(); // Send message on Enter key press\n    };\n    try {\n      const response = await axios.post('http://localhost:3011/api/process-query', {\n        query\n      });\n      console.log('Response data:', response.data); // Log API response\n      setResult(response.data); // Update result state with the API response\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Error processing query:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message); // Log error details\n      setResult({\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to process query.',\n        query,\n        analysis: 'Malicious',\n        // Assume query is malicious if an error occurs\n        timestamp: new Date().toISOString() // Add timestamp to the error\n      });\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sql-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SQL Query Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"sql-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter your SQL query here...\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        className: \"sql-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"sql-submit\",\n        disabled: loading,\n        children: loading ? 'Analyzing...' : 'Submit Query'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sql-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), result.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Error:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 32\n          }, this), \" \", result.error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Query:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 32\n          }, this), \" \", result.query]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Analysis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 32\n          }, this), \" \", result.analysis]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Timestamp:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 32\n          }, this), \" \", new Date(result.timestamp).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Query:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 32\n          }, this), \" \", result.query]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Analysis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 32\n          }, this), \" \", result.analysis]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Result:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 32\n          }, this), \" \", result.result]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this), result.queryResult && Array.isArray(result.queryResult) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-answer-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Query Result:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"result-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"title-key\",\n                children: Object.keys(result.queryResult[0] || {}).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: key\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: result.queryResult.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"title-answer\",\n                children: Object.values(row).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: value\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 57\n                }, this))\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Sql, \"MgbTv57H09yaLJriPXF+BBhqOjQ=\");\n_c = Sql;\nvar _c;\n$RefreshReg$(_c, \"Sql\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Sql","_s","query","setQuery","result","setResult","loading","setLoading","handleSubmit","e","preventDefault","handleKeyDown","key","sendMessage","response","post","console","log","data","error","_error$response","_error$response2","_error$response2$data","message","analysis","timestamp","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","type","disabled","toLocaleString","queryResult","Array","isArray","Object","keys","map","row","index","values","idx","_c","$RefreshReg$"],"sources":["/Users/timothygilbert/Documents/React JS/anomaly-detector/client/src/pages/SQLCheckPage/Sql.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Sql.css';\n\nexport default function Sql() {\n    const [query, setQuery] = useState(''); // Store the user's SQL query input\n    const [result, setResult] = useState(null); // Store the API response\n    const [loading, setLoading] = useState(false); // Manage loading state\n\n    // Function to handle form submission\n    const handleSubmit = async (e) => {\n        e.preventDefault(); // Prevent page reload on form submit\n        setLoading(true); // Set loading state\n\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') sendMessage(); // Send message on Enter key press\n    };\n\n        try {\n            const response = await axios.post('http://localhost:3011/api/process-query', { query });\n            console.log('Response data:', response.data); // Log API response\n            setResult(response.data); // Update result state with the API response\n        } catch (error) {\n            console.error('Error processing query:', error.response?.data || error.message); // Log error details\n            setResult({\n                error: error.response?.data?.error || 'Failed to process query.',\n                query,\n                analysis: 'Malicious', // Assume query is malicious if an error occurs\n                timestamp: new Date().toISOString(), // Add timestamp to the error\n            });\n        } finally {\n            setLoading(false); // Reset loading state\n        }\n    };\n\n    return (\n        <div className=\"sql-container\">\n            <h1>SQL Query Analyzer</h1>\n            <form onSubmit={handleSubmit} className=\"sql-form\">\n                <textarea\n                    placeholder=\"Enter your SQL query here...\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                    className=\"sql-textarea\"\n                 \n                ></textarea>\n                <button type=\"submit\" className=\"sql-submit\" disabled={loading}>\n                    {loading ? 'Analyzing...' : 'Submit Query'}\n                </button>\n            </form>\n            {result && (\n                <div className=\"sql-result\">\n                    <h2>Result:</h2>\n                    {result.error ? (\n                        <div>\n                            <p><strong>Error:</strong> {result.error}</p>\n                            <p><strong>Query:</strong> {result.query}</p>\n                            <p><strong>Analysis:</strong> {result.analysis}</p>\n                            <p><strong>Timestamp:</strong> {new Date(result.timestamp).toLocaleString()}</p>\n                        </div>\n                    ) : (\n                        <div>\n                            <p><strong>Query:</strong> {result.query}</p>\n                            <p><strong>Analysis:</strong> {result.analysis}</p>\n                            <p><strong>Result:</strong> {result.result}</p>\n                            {result.queryResult && Array.isArray(result.queryResult) && (\n                                <div className=\"title-answer-container\">\n                                    <h3>Query Result:</h3>\n                                    <table className=\"result-table\">\n                                        <thead>\n                                            <tr className=\"title-key\">\n                                                {Object.keys(result.queryResult[0] || {}).map((key) => (\n                                                    <th key={key}>{key}</th>\n                                                ))}\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {result.queryResult.map((row, index) => (\n                                                <tr className=\"title-answer\" key={index}>\n                                                    {Object.values(row).map((value, idx) => (\n                                                        <td key={idx}>{value}</td>\n                                                    ))}\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            )}\n\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}