{"ast":null,"code":"var _jsxFileName = \"/Users/timothygilbert/Documents/React JS/anomaly-detector/client/src/pages/HomePage/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  // Function to handle sending a message\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Add user's message to the chat\n    const newMessages = [...messages, {\n      role: 'user',\n      content: input\n    }];\n    setMessages(newMessages);\n    setInput(''); // Clear the input field\n\n    try {\n      // Send request to backend API\n      const response = await axios.post('http://localhost:3011/api/chat', {\n        prompt: input // Send only the user message for simplicity\n      });\n\n      // Add AI's response to the chat\n      setMessages([...newMessages, {\n        role: 'assistant',\n        content: response.data.content\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...newMessages, {\n        role: 'assistant',\n        content: 'Error: Could not retrieve response'\n      }]);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') sendMessage(); // Send message on Enter key press\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\",\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Home","_s","messages","setMessages","input","setInput","sendMessage","trim","newMessages","role","content","response","post","prompt","data","error","console","handleKeyDown","e","key","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/timothygilbert/Documents/React JS/anomaly-detector/client/src/pages/HomePage/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Home.css';\n\nexport default function Home() {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState('');\n\n    // Function to handle sending a message\n    const sendMessage = async () => {\n        if (!input.trim()) return;\n\n        // Add user's message to the chat\n        const newMessages = [...messages, { role: 'user', content: input }];\n        setMessages(newMessages);\n        setInput(''); // Clear the input field\n\n        try {\n            // Send request to backend API\n            const response = await axios.post('http://localhost:3011/api/chat', {\n                prompt: input, // Send only the user message for simplicity\n            });\n\n            // Add AI's response to the chat\n            setMessages([...newMessages, { role: 'assistant', content: response.data.content }]);\n        } catch (error) {\n            console.error('Error sending message:', error);\n            setMessages([...newMessages, { role: 'assistant', content: 'Error: Could not retrieve response' }]);\n        }\n    };\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') sendMessage(); // Send message on Enter key press\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-window\">\n                {messages.map((message, index) => (\n                    <div key={index} className={`message ${message.role}`}>\n                        <p>{message.content}</p>\n                    </div>\n                ))}\n            </div>\n            <div className=\"input-area\">\n                <input\n                    type=\"text\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder=\"Type your message...\"\n                    onKeyDown={handleKeyDown}\n                />\n                <button onClick={sendMessage}>Send</button>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}